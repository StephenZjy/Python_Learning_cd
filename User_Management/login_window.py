# -*- coding: utf-8 -*-
import os

# login implementation generated from reading ui file 'new_login.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QSize
from PyQt5.QtGui import QPixmap, QIcon
from PyQt5.QtWidgets import QTableWidgetItem, QTableWidget, QHBoxLayout

from csvOperator import *
from user_window import Ui_user_window


class Ui_login(QtWidgets.QDialog):
    def __init__(self, mywindow_instance):
        super().__init__()
        self.mywindow = mywindow_instance
        self.setupUi(self)
        self.load_info()
        self.current_username = None
        self.row_num = 0

    def setupUi(self, login):
        login.setObjectName("login")
        login.resize(458, 785)
        self.photo = QtWidgets.QLabel(login)
        self.photo.setGeometry(QtCore.QRect(40, 40, 130, 150))
        self.photo.setObjectName("photo")
        self.username = QtWidgets.QLabel(login)
        self.username.setGeometry(QtCore.QRect(230, 40, 111, 41))
        self.username.setObjectName("username")
        self.username_edit = QtWidgets.QLineEdit(login)
        self.username_edit.setGeometry(QtCore.QRect(230, 40, 111, 41))
        self.username_edit.setObjectName("username")
        self.username_edit.setVisible(False)
        self.tel = QtWidgets.QLabel(login)
        self.tel.setGeometry(QtCore.QRect(230, 90, 111, 41))
        self.tel.setObjectName("tel")
        self.tel_edit = QtWidgets.QLineEdit(login)
        self.tel_edit.setGeometry(QtCore.QRect(230, 90, 111, 41))
        self.tel_edit.setObjectName("tel")
        self.tel_edit.setVisible(False)
        self.email = QtWidgets.QLabel(login)
        self.email.setGeometry(QtCore.QRect(230, 140, 111, 41))
        self.email.setObjectName("email")
        self.email_edit = QtWidgets.QLineEdit(login)
        self.email_edit.setGeometry(QtCore.QRect(230, 140, 111, 41))
        self.email_edit.setObjectName("email")
        self.email_edit.setVisible(False)
        self.editButton = QtWidgets.QPushButton(login)
        self.editButton.setGeometry(QtCore.QRect(350, 40, 50, 30))
        self.editButton.setObjectName("editButton")
        self.editButton.setText("编辑")
        self.editButton.clicked.connect(self.toggle_edit_mode)

        self.tableWidget = QtWidgets.QTableWidget(login)
        self.tableWidget.setGeometry(QtCore.QRect(40, 210, 391, 551))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        self.tableWidget.setColumnWidth(0, 110)
        self.tableWidget.setColumnWidth(1, 260)
        self.tableWidget.verticalHeader().setDefaultSectionSize(100)
        self.tableWidget.setIconSize(QSize(100, 120))
        self.tableWidget.horizontalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setVisible(False)

        photo_item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, photo_item)
        username_item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, username_item)
        self.tableWidget.doubleClicked.connect(self.show_user_window)
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget.itemClicked.connect(self.on_tableWidget_Clicked)

        self.photo.raise_()
        self.username.raise_()
        self.tableWidget.raise_()

        self.retranslateUi(login)
        QtCore.QMetaObject.connectSlotsByName(login)

    def retranslateUi(self, login):
        _translate = QtCore.QCoreApplication.translate
        username, tel, email = self.mywindow.match_info()
        login.setWindowTitle(_translate("login", "login"))
        self.photo.setText(_translate("login", "photo"))
        self.username.setText(_translate("login", username))
        self.tel.setText(_translate("login", tel))
        self.email.setText(_translate("login", email))
        self.username_edit.setText(_translate("login", username))
        self.tel_edit.setText(_translate("login", tel))
        self.email_edit.setText(_translate("login", email))
        photo_item = self.tableWidget.horizontalHeaderItem(0)
        photo_item.setText(_translate("login", "照片"))
        username_item = self.tableWidget.horizontalHeaderItem(1)
        username_item.setText(_translate("login", "姓名"))

        photo_path = self.get_photo_path('user_photo', username)
        if not photo_path:
            photo_path = 'user_photo/default.png'
        pixmap = QPixmap(photo_path)
        self.photo.setPixmap(pixmap)
        self.photo.setScaledContents(True)

    def toggle_edit_mode(self):
        if self.username.isVisible():
            self.username.setVisible(False)
            self.tel.setVisible(False)
            self.email.setVisible(False)
            self.username_edit.setVisible(True)
            self.tel_edit.setVisible(True)
            self.email_edit.setVisible(True)
            self.editButton.setText("保存")  # 切换按钮文本

        else:
            self.username.setVisible(True)
            self.tel.setVisible(True)
            self.email.setVisible(True)
            self.username_edit.setVisible(False)
            self.tel_edit.setVisible(False)
            self.email_edit.setVisible(False)
            self.editButton.setText("编辑")

    def set_row_data(self, row, username, photo_path):
        photo_item = QTableWidgetItem()
        icon = QIcon(photo_path)
        pixmap = QPixmap(icon.pixmap(100, 120))
        scaled_pixmap = pixmap.scaled(100, 120)
        scaled_icon = QIcon(scaled_pixmap)
        photo_item.setIcon(scaled_icon)
        username_item = QTableWidgetItem(username)
        photo_item.setTextAlignment(QtCore.Qt.AlignCenter)
        username_item.setTextAlignment(QtCore.Qt.AlignCenter)

        self.tableWidget.setItem(row, 0, photo_item)
        self.tableWidget.setItem(row, 1, username_item)

    def load_info(self, csv_file='user_info.csv'):
        df_info = read_csv(csv_file)

        for row, (_, data) in enumerate(df_info.iterrows()):
            username = data['username']
            photo_path = self.get_photo_path('user_photo', username)
            if username != self.username.text():
                self.row_num = self.tableWidget.rowCount()
                self.tableWidget.setRowCount(self.row_num + 1)
                if photo_path:
                    self.set_row_data(self.row_num, username, photo_path)
                else:
                    self.set_row_data(self.row_num, username, 'user_photo/default.png')
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)

    def get_photo_path(self, file_dir, target_string):
        for root, dirs, files in os.walk(file_dir):
            for file in files:
                if target_string in file:
                    photo_path = os.path.join(root, file)
                    return photo_path

    def match_info(self):
        pd_info = read_csv(csv_file='user_info.csv')
        user_info = pd_info[pd_info['username'] == self.current_username]
        username = str(user_info['username'].values[0])
        password = str(user_info['password'].values[0])
        tel = str(user_info['tel'].values[0])
        email = str(user_info['email'].values[0])

        return username, tel, email

    def on_tableWidget_Clicked(self, item):
        item = self.tableWidget.item(item.row(), 1)
        if item is not None:
            self.current_username = item.text()

    def show_user_window(self):
        user_window = Ui_user_window(self)
        user_window.show()
        user_window.exec_()
